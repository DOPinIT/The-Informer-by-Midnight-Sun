{"mappings":"0DACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,ECmGX,MAAMK,EAAU,IAvGhB,MAMMC,uBAAmBC,GACrBC,KAAKF,mBAAqBC,C,CAG5BE,qBACED,KAAKF,oBAAsB,C,CAG7BI,qBACkC,IAA5BF,KAAKF,qBAGTE,KAAKF,oBAAsB,E,CAG7BK,uBACE,aAAaC,MAAM,0GAChBC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,IACJ,GAAyB,IAArBA,EAAKC,YACP,MAAM,IAAIH,MAIZ,OADAR,KAAKY,SAAWF,EAAKG,QAAQC,KAAIC,GAAWA,EAAQC,UAC7CN,EAAKG,QAAQC,KAAIC,GAAWA,EAAQE,cAAa,G,CAI9Dd,+BAA+Be,GAC7B,aAAad,MACX,oDAAwBc,mDAEvBb,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GAAQA,G,CAGlBP,wBAAwBgB,EAAaC,GACnC,IAAIC,EAAe,GAQnB,OANID,IACFC,EAAe,gBA8BrB,MACEC,uBAAuBF,GACrB,MAAMG,EAAO,IAAIC,KAAKJ,GAChBK,EAAOF,EAAKG,iBAClB,IAAIC,EAAQJ,EAAKK,cAAgB,EAC7BC,EAAMN,EAAKO,aAQf,OANIH,EAAQ,KACVA,EAAQA,EAAMI,WAAWC,SAAS,EAAG,MAEnCH,EAAM,KACRA,EAAMA,EAAIE,WAAWC,SAAS,EAAG,MAE5B,GAAGP,KAAQE,KAASE,G,GA3CoBI,gBAC3Cb,aAIShB,MACX,8DAAwBe,8CAA8BE,UAAqBrB,KAAKF,sBAE/EO,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,4BAElB,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GAAQA,G,CAGlBP,8BACE,aAAaC,MAAM,qGAChBC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAEZ,OAAOF,EAASG,MAAM,IAEvBJ,MAAKK,GAAQA,G,CA7ElBwB,cAHAC,EAAA9C,EAAA,CAAAW,KAAA,qBAAqB,GAErBmC,EAAA9C,EAAA,CAAAW,KAAA,WAAW,G,GAqGcH,EAAQuC,iBAAiB/B,MAAKgC,IACvDC,QAAQC,IAAIF,EAAY,IAK1BxC,EACG2C,yBAHiB,YAIjBnC,MAAKoC,GACJH,QAAQC,IAAI,6BAA8BE,EAAS5B,WAGvDhB,EACG6C,kBAAkB,WAClBrC,MAAKK,GAAQ4B,QAAQC,IAAI,wBAAyB7B,EAAKJ,YACvDqC,OAAMC,GAASN,QAAQC,IAAIK,EAAMC,WAEpChD,EACGiD,wBACAzC,MAAK0C,GACJT,QAAQC,IAAI,4BAA6BQ,EAAmBlC","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/JS/newsAPI.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const KEY = 'S9P6gsklItZ6AfgyQULO5BfOKZag8n9Y';\nconst SECTIONS_URL =\n  'https://api.nytimes.com/svc/news/v3/content/section-list.json?';\n\nconst SECTION_SEARCH_URL = 'https://api.nytimes.com/svc/news/v3/content/inyt/';\n\nconst ARTICLE_SEARCH_URL =\n  'https://api.nytimes.com/svc/search/v2/articlesearch.json?q=';\n\nconst MOST_VIEWED_ARTICLES_URL =\n  'https://api.nytimes.com/svc/mostpopular/v2/viewed/1.json?';\n\nclass NewsApi {\n  pageNumberBySearch = 0;\n\n  sections = '';\n  constructor() {}\n\n  set pageNumberBySearch(numberOfPage) {\n    this.pageNumberBySearch = numberOfPage;\n  }\n\n  increasePageNumber() {\n    this.pageNumberBySearch += 1;\n  }\n\n  decreasePageNumber() {\n    if (this.pageNumberBySearch === 0) {\n      return;\n    }\n    this.pageNumberBySearch -= 1;\n  }\n\n  async getSectionList() {\n    return await fetch(`${SECTIONS_URL}api-key=${KEY}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error();\n        }\n        return response.json();\n      })\n      .then(data => {\n        if (data.num_results === 0) {\n          throw new Error();\n        }\n\n        this.sections = data.results.map(element => element.section);\n        return data.results.map(element => element.display_name);\n      });\n  }\n\n  async getNewsListBySectionName(sectionName) {\n    return await fetch(\n      `${SECTION_SEARCH_URL}${sectionName}.json?api-key=${KEY}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error();\n        }\n        return response.json();\n      })\n      .then(data => data);\n  }\n\n  async articleSearchList(searchQuery, milliseconds) {\n    let filterByDate = '';\n\n    if (milliseconds) {\n      filterByDate = `fq=pub_date:(${DateTimestamp.createTimestamp(\n        milliseconds\n      )})`;\n    }\n\n    return await fetch(\n      `${ARTICLE_SEARCH_URL}${searchQuery}&api-key=${KEY}&${filterByDate}&page=${this.pageNumberBySearch}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('We did not find anything');\n        }\n        return response.json();\n      })\n      .then(data => data);\n  }\n\n  async getMostViewedArticles() {\n    return await fetch(`${MOST_VIEWED_ARTICLES_URL}api-key=${KEY}`)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error();\n        }\n        return response.json();\n      })\n      .then(data => data);\n  }\n}\n\n// Create timestamp for search request by date - 2020-02-01 - YYYY-MM-DD\nclass DateTimestamp {\n  static createTimestamp(milliseconds) {\n    const date = new Date(milliseconds);\n    const year = date.getUTCFullYear();\n    let month = date.getUTCMonth() + 1;\n    let day = date.getUTCDate();\n\n    if (month < 10) {\n      month = month.toString().padStart(2, '0');\n    }\n    if (day < 10) {\n      day = day.toString().padStart(2, '0');\n    }\n    return `${year}-${month}-${day}`;\n  }\n}\n\nconst newsApi = new NewsApi();\nconst sectionListPromise = newsApi.getSectionList().then(sectionList => {\n  console.log(sectionList);\n});\n\nconst sectionName = 'business';\n\nnewsApi\n  .getNewsListBySectionName(sectionName)\n  .then(newsList =>\n    console.log('News list by section name ', newsList.results)\n  );\n\nnewsApi\n  .articleSearchList('ukraine')\n  .then(data => console.log('Search list by submit', data.response))\n  .catch(error => console.log(error.message));\n\nnewsApi\n  .getMostViewedArticles()\n  .then(mostViewedArticles =>\n    console.log('The most viewed articles ', mostViewedArticles.results)\n  );\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$5815c6d8b6c8a016$var$newsApi","pageNumberBySearch","numberOfPage","this","increasePageNumber","decreasePageNumber","async","fetch","then","response","ok","Error","json","data","num_results","sections","results","map","element","section","display_name","sectionName1","searchQuery","milliseconds","filterByDate","static","date","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","toString","padStart","createTimestamp","constructor","$parcel$interopDefault","getSectionList","sectionList","console","log","getNewsListBySectionName","newsList","articleSearchList","catch","error","message","getMostViewedArticles","mostViewedArticles"],"version":3,"file":"index.de54ba0a.js.map"}